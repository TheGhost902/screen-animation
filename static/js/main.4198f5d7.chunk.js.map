{"version":3,"sources":["components/MainScreen/index.jsx","components/ScreenContainer/index.jsx","components/App/index.jsx","index.jsx"],"names":["ScrollContext","React","createContext","MainScreen","children","useState","screenNumber","setScreenNumber","clientYRef","useRef","debouncedScrollHandler","debounce","delta","length","className","onWheel","e","nativeEvent","wheelDeltaY","onTouchStart","current","touches","clientY","onTouchEnd","changedTouches","Provider","value","ScreenContainer","id","useContext","console","log","style","transform","opacity","App","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,G,MAAgBC,IAAMC,cAAc,IAE1C,SAASC,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SAAY,EACGC,mBAAS,GADZ,mBAC9BC,EAD8B,KAChBC,EADgB,KAE/BC,EAAaC,iBAAO,GAEpBC,EAAyBC,KAAS,SAAAC,GACpC,GAAIR,GAAYA,EAASS,OAAQ,CAAC,IACtBA,EAAWT,EAAXS,OAIJD,EAAQ,GAAKN,EAAe,GAC5BC,EAAgBD,EAAe,GAE/BM,EAAQ,GAAKN,EAAeO,EAAS,GACrCN,EAAgBD,EAAe,MAExC,KA2BH,OACI,yBACIQ,UAAU,cACVC,QA7BR,SAAuBC,GACnB,IAAMJ,EAAQI,EAAEC,YAAYC,YAE5BR,EAAuBE,IA2BnBO,aAxBR,SAA2BH,GACvBR,EAAWY,QAAUJ,EAAEC,YAAYI,QAAQ,GAAGC,SAwB1CC,WAtBR,SAAyBP,GAAI,IACjBM,EAAYN,EAAEC,YAAYO,eAAe,GAAzCF,QAER,GAAIlB,GAAYA,EAASS,OAAQ,CAAC,IACtBA,EAAWT,EAAXS,OACAO,EAAYZ,EAAZY,QAIJE,EAAUF,GAAWd,EAAe,GACpCC,EAAgBD,EAAe,GAE/BgB,EAAUF,GAAWd,EAAeO,EAAS,GAC7CN,EAAgBD,EAAe,MAWnC,yBAAKQ,UAAU,uBAAuBR,EAAe,GAErD,kBAACN,EAAcyB,SAAf,CAAwBC,MAAOpB,GAC1BF,I,MCtDV,SAASuB,EAAT,GAA4C,IAAjBvB,EAAgB,EAAhBA,SAAUwB,EAAM,EAANA,GAClCtB,EAAeuB,qBAAW7B,GAIhC,OAFA8B,QAAQC,IAAI,cAAezB,GAGvB,yBACIQ,UAAU,mBACVkB,MAAO,CACHC,UAAU,cAAD,QAAiB,IAAM3B,EAAvB,MACT4B,QAAS5B,IAAiBsB,EAAI,EAAI,IAGjCxB,GCZV,SAAS+B,IACZ,OACI,yBAAKrB,UAAU,OACX,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAiBc,GAAI,GACjB,yBAAKd,UAAU,eACX,wBAAIA,UAAU,qBAAd,kBAMR,kBAAC,EAAD,CAAiBc,GAAI,GACjB,yBAAKd,UAAU,eACX,wBAAIA,UAAU,qBAAd,mBAMR,kBAAC,EAAD,CAAiBc,GAAI,GACjB,yBAAKd,UAAU,eACX,wBAAIA,UAAU,qBAAd,oBCxBxBsB,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.4198f5d7.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport debounce from 'lodash/debounce'\r\n\r\nimport './MainScreen.scss'\r\n\r\nexport const ScrollContext = React.createContext(0)\r\n\r\nexport function MainScreen({ children }) {\r\n    const [screenNumber, setScreenNumber] = useState(0)\r\n    const clientYRef = useRef(0)\r\n\r\n    const debouncedScrollHandler = debounce(delta => {\r\n        if (children && children.length) {\r\n            const { length } = children\r\n\r\n            // scroll direction\r\n            // high limit\r\n            if (delta > 0 && screenNumber > 0)\r\n                setScreenNumber(screenNumber - 1)\r\n            // low limit\r\n            if (delta < 0 && screenNumber < length - 1)\r\n                setScreenNumber(screenNumber + 1)\r\n        }\r\n    }, 200)\r\n    function scrollHandler(e) {\r\n        const delta = e.nativeEvent.wheelDeltaY\r\n\r\n        debouncedScrollHandler(delta)\r\n    }\r\n\r\n    function touchStartHandler(e) {\r\n        clientYRef.current = e.nativeEvent.touches[0].clientY\r\n    }\r\n    function touchEndHandler(e) {\r\n        const { clientY } = e.nativeEvent.changedTouches[0]\r\n\r\n        if (children && children.length) {\r\n            const { length } = children\r\n            const { current } = clientYRef\r\n        \r\n            // scroll direction\r\n            // high limit\r\n            if (clientY > current && screenNumber > 0)\r\n                setScreenNumber(screenNumber - 1)\r\n            // low limit\r\n            if (clientY < current && screenNumber < length - 1)\r\n                setScreenNumber(screenNumber + 1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className=\"main-screen\"\r\n            onWheel={scrollHandler}\r\n            onTouchStart={touchStartHandler}\r\n            onTouchEnd={touchEndHandler}\r\n        >\r\n            <div className=\"main-screen__status\">{screenNumber + 1}</div>\r\n\r\n            <ScrollContext.Provider value={screenNumber}>\r\n                {children}\r\n            </ScrollContext.Provider>\r\n        </div>\r\n    )\r\n}","import React, { useContext } from 'react'\r\n\r\nimport './ScreenContainer.scss'\r\n\r\nimport { ScrollContext } from '../MainScreen'\r\n\r\nexport function ScreenContainer({ children, id }) {\r\n    const screenNumber = useContext(ScrollContext)\r\n\r\n    console.log('Container: ', screenNumber)\r\n\r\n    return (\r\n        <div \r\n            className=\"screen-container\"\r\n            style={{\r\n                transform: `translateY(${-100 * screenNumber}%)`,\r\n                opacity: screenNumber === id? 1 : 0\r\n            }}\r\n            >\r\n                {children}\r\n            </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport './App.scss'\r\n\r\nimport { MainScreen } from '../MainScreen'\r\nimport { ScreenContainer } from '../ScreenContainer'\r\n\r\nexport function App() {\r\n    return (\r\n        <div className=\"app\">\r\n            <MainScreen>\r\n                <ScreenContainer id={0}>\r\n                    <div className=\"app__screen\">\r\n                        <h1 className=\"app__screen-title\">\r\n                            First Screen\r\n                        </h1>\r\n                    </div>\r\n                </ScreenContainer>\r\n\r\n                <ScreenContainer id={1}>\r\n                    <div className=\"app__screen\">\r\n                        <h1 className=\"app__screen-title\">\r\n                            Second Screen\r\n                        </h1>\r\n                    </div>\r\n                </ScreenContainer>\r\n                \r\n                <ScreenContainer id={2}>\r\n                    <div className=\"app__screen\">\r\n                        <h1 className=\"app__screen-title\">\r\n                            Third Screen\r\n                        </h1>\r\n                    </div>\r\n                </ScreenContainer>\r\n            </MainScreen>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { App } from './components/App'\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}